// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MummyProject.Models;

namespace MummyProject.Migrations
{
    [DbContext(typeof(MummyDbContext))]
    [Migration("20210407211616_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13");

            modelBuilder.Entity("MummyProject.Models.Age", b =>
                {
                    b.Property<long>("AgeCode")
                        .HasColumnName("age_code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgeDescription")
                        .HasColumnName("age_description")
                        .HasColumnType("TEXT");

                    b.HasKey("AgeCode");

                    b.ToTable("Age");
                });

            modelBuilder.Entity("MummyProject.Models.Burial", b =>
                {
                    b.Property<long>("BurialId")
                        .HasColumnName("burial_id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AgeCode")
                        .HasColumnName("age_code")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AgeEstimate")
                        .HasColumnName("age_estimate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgeMethod")
                        .HasColumnName("age_method")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArtifactDescription")
                        .HasColumnName("artifact_description")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ArtifactFound")
                        .HasColumnName("artifact_found")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("BasilarSuture")
                        .HasColumnName("basilar_suture")
                        .HasColumnType("REAL");

                    b.Property<double?>("BasionBregmaHeight")
                        .HasColumnName("basion_bregma_height")
                        .HasColumnType("REAL");

                    b.Property<double?>("BasionNasion")
                        .HasColumnName("basion_nasion")
                        .HasColumnType("REAL");

                    b.Property<double?>("BasionProsthionLength")
                        .HasColumnName("basion_prosthion_length")
                        .HasColumnType("REAL");

                    b.Property<double?>("BizygomaticDiameter")
                        .HasColumnName("bizygomatic_diameter")
                        .HasColumnType("REAL");

                    b.Property<double?>("BoneLength")
                        .HasColumnName("bone_length")
                        .HasColumnType("REAL");

                    b.Property<long?>("BoneTaken")
                        .HasColumnName("bone_taken")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("BurialDepth")
                        .HasColumnName("burial_depth")
                        .HasColumnType("REAL");

                    b.Property<string>("BurialLocationEw")
                        .HasColumnName("burial_location_ew")
                        .HasColumnType("TEXT");

                    b.Property<string>("BurialLocationNs")
                        .HasColumnName("burial_location_ns")
                        .HasColumnType("TEXT");

                    b.Property<long?>("BurialNumber")
                        .HasColumnName("burial_number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BurialSubplot")
                        .HasColumnName("burial_subplot")
                        .HasColumnType("TEXT");

                    b.Property<string>("CranialSuture")
                        .HasColumnName("cranial_suture")
                        .HasColumnType("TEXT");

                    b.Property<long?>("DayFound")
                        .HasColumnName("day_found")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescriptionOfTaken")
                        .HasColumnName("description_of_taken")
                        .HasColumnType("TEXT");

                    b.Property<double?>("DorsalPitting")
                        .HasColumnName("dorsal_pitting")
                        .HasColumnType("REAL");

                    b.Property<double?>("EastToFeet")
                        .HasColumnName("east_to_feet")
                        .HasColumnType("REAL");

                    b.Property<double?>("EastToHead")
                        .HasColumnName("east_to_head")
                        .HasColumnType("REAL");

                    b.Property<long?>("EpiphysealUnion")
                        .HasColumnName("epiphyseal_union")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("EstimateLivingStature")
                        .HasColumnName("estimate_living_stature")
                        .HasColumnType("REAL");

                    b.Property<double?>("FemurDiameter")
                        .HasColumnName("femur_diameter")
                        .HasColumnType("REAL");

                    b.Property<double?>("FemurHead")
                        .HasColumnName("femur_head")
                        .HasColumnType("REAL");

                    b.Property<double?>("FemurLength")
                        .HasColumnName("femur_length")
                        .HasColumnType("REAL");

                    b.Property<string>("FieldNotes")
                        .HasColumnName("field_notes")
                        .HasColumnType("TEXT");

                    b.Property<double?>("ForemanMagnum")
                        .HasColumnName("foreman_magnum")
                        .HasColumnType("REAL");

                    b.Property<double?>("GeFunctionTotal")
                        .HasColumnName("ge_function_total")
                        .HasColumnType("REAL");

                    b.Property<string>("GenderBodyCol")
                        .HasColumnName("gender_body_col")
                        .HasColumnType("TEXT");

                    b.Property<string>("GenderGe")
                        .HasColumnName("gender_ge")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Gonian")
                        .HasColumnName("gonian")
                        .HasColumnType("REAL");

                    b.Property<string>("HairColor")
                        .HasColumnName("hair_color")
                        .HasColumnType("TEXT");

                    b.Property<long?>("HairTaken")
                        .HasColumnName("hair_taken")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HeadDirection")
                        .HasColumnName("head_direction")
                        .HasColumnType("TEXT");

                    b.Property<long?>("HighPairEw")
                        .HasColumnName("high_pair_ew")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("HighPairNs")
                        .HasColumnName("high_pair_ns")
                        .HasColumnType("BLOB");

                    b.Property<double?>("Humerus")
                        .HasColumnName("humerus")
                        .HasColumnType("REAL");

                    b.Property<double?>("HumerusHead")
                        .HasColumnName("humerus_head")
                        .HasColumnType("REAL");

                    b.Property<double?>("HumerusLength")
                        .HasColumnName("humerus_length")
                        .HasColumnType("REAL");

                    b.Property<double?>("IlacCrest")
                        .HasColumnName("ilac_crest")
                        .HasColumnType("REAL");

                    b.Property<double?>("InterorbitalBreadth")
                        .HasColumnName("interorbital_breadth")
                        .HasColumnType("REAL");

                    b.Property<double?>("LengthOfRemains")
                        .HasColumnName("length_of_remains")
                        .HasColumnType("REAL");

                    b.Property<long?>("LowPairEw")
                        .HasColumnName("low_pair_ew")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("LowPairNs")
                        .HasColumnName("low_pair_ns")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MaximumCranialBreadth")
                        .HasColumnName("maximum_cranial_breadth")
                        .HasColumnType("REAL");

                    b.Property<double?>("MaximumCranialLength")
                        .HasColumnName("maximum_cranial_length")
                        .HasColumnType("REAL");

                    b.Property<double?>("MaximumNasalBreadth")
                        .HasColumnName("maximum_nasal_breadth")
                        .HasColumnType("REAL");

                    b.Property<double?>("MedialClavicle")
                        .HasColumnName("medial_clavicle")
                        .HasColumnType("REAL");

                    b.Property<double?>("MedialIpRamus")
                        .HasColumnName("medial_ip_ramus")
                        .HasColumnType("REAL");

                    b.Property<string>("MonthFound")
                        .HasColumnName("month_found")
                        .HasColumnType("TEXT");

                    b.Property<double?>("NasionProsthion")
                        .HasColumnName("nasion_prosthion")
                        .HasColumnType("REAL");

                    b.Property<double?>("NuchalCrest")
                        .HasColumnName("nuchal_crest")
                        .HasColumnType("REAL");

                    b.Property<double?>("OrbitEdge")
                        .HasColumnName("orbit_edge")
                        .HasColumnType("REAL");

                    b.Property<string>("Osteophytosis")
                        .HasColumnName("osteophytosis")
                        .HasColumnType("TEXT");

                    b.Property<double?>("ParietalBossing")
                        .HasColumnName("parietal_bossing")
                        .HasColumnType("REAL");

                    b.Property<string>("PathologyAnomolies")
                        .HasColumnName("pathology_anomolies")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PhotoId")
                        .HasColumnName("photo_id")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PreaurSulcus")
                        .HasColumnName("preaur_sulcus")
                        .HasColumnType("REAL");

                    b.Property<string>("PresevationIndex")
                        .HasColumnName("presevation_index")
                        .HasColumnType("TEXT");

                    b.Property<double?>("PubicBone")
                        .HasColumnName("pubic_bone")
                        .HasColumnType("REAL");

                    b.Property<string>("PubicSymphysis")
                        .HasColumnName("pubic_symphysis")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rack")
                        .HasColumnName("rack")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Robust")
                        .HasColumnName("robust")
                        .HasColumnType("REAL");

                    b.Property<long?>("SampleNumber")
                        .HasColumnName("sample_number")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("SciaticNotch")
                        .HasColumnName("sciatic_notch")
                        .HasColumnType("REAL");

                    b.Property<string>("SexMethod")
                        .HasColumnName("sex_method")
                        .HasColumnType("TEXT");

                    b.Property<string>("Shelf")
                        .HasColumnName("shelf")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SoftTissueTaken")
                        .HasColumnName("soft_tissue_taken")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("SouthToFeet")
                        .HasColumnName("south_to_feet")
                        .HasColumnType("REAL");

                    b.Property<double?>("SouthToHead")
                        .HasColumnName("south_to_head")
                        .HasColumnType("REAL");

                    b.Property<double?>("SubpubicAngle")
                        .HasColumnName("subpubic_angle")
                        .HasColumnType("REAL");

                    b.Property<double?>("SupraorbitalRidges")
                        .HasColumnName("supraorbital_ridges")
                        .HasColumnType("REAL");

                    b.Property<long?>("TextileTaken")
                        .HasColumnName("textile_taken")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("TibiaLength")
                        .HasColumnName("tibia_length")
                        .HasColumnType("REAL");

                    b.Property<string>("ToothAttrition")
                        .HasColumnName("tooth_attrition")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToothEruption")
                        .HasColumnName("tooth_eruption")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ToothTaken")
                        .HasColumnName("tooth_taken")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("VentralArc")
                        .HasColumnName("ventral_arc")
                        .HasColumnType("REAL");

                    b.Property<long?>("WrappingCode")
                        .HasColumnName("wrapping_code")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("YearFound")
                        .HasColumnName("year_found")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ZygomaticCrest")
                        .HasColumnName("zygomatic_crest")
                        .HasColumnType("REAL");

                    b.HasKey("BurialId");

                    b.ToTable("Burial");
                });

            modelBuilder.Entity("MummyProject.Models.Wrapping", b =>
                {
                    b.Property<long>("WrappingCode")
                        .HasColumnName("wrapping_code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WrappingDescription")
                        .HasColumnName("wrapping_description")
                        .HasColumnType("TEXT");

                    b.HasKey("WrappingCode");

                    b.ToTable("Wrapping");
                });
#pragma warning restore 612, 618
        }
    }
}
